CREATE USER IF NOT EXISTS "SA" SALT '466d01ff33d3e2f5' HASH '808355b97e06c1ecd6f0f31730fde4ad174375f07a7ab971072efb11985c8032' ADMIN;
CREATE CACHED TABLE "PUBLIC"."MINISTER"(
    "ID" BINARY NOT NULL,
    "NAME" VARCHAR(255)
);
ALTER TABLE "PUBLIC"."MINISTER" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_D" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.MINISTER;
CREATE CACHED TABLE "PUBLIC"."PASSWORD_RESET_TOKEN"(
    "ID" BINARY NOT NULL,
    "EXPIRY_DATE" TIMESTAMP,
    "TOKEN" VARCHAR(255),
    "USER_ID" BINARY NOT NULL
);
ALTER TABLE "PUBLIC"."PASSWORD_RESET_TOKEN" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_C" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.PASSWORD_RESET_TOKEN;
CREATE CACHED TABLE "PUBLIC"."PRIVILEGE"(
    "ID" BINARY NOT NULL,
    "NAME" VARCHAR(255)
);
ALTER TABLE "PUBLIC"."PRIVILEGE" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_4" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.PRIVILEGE;
CREATE CACHED TABLE "PUBLIC"."ROLE"(
    "ID" BINARY NOT NULL,
    "NAME" VARCHAR(255)
);
ALTER TABLE "PUBLIC"."ROLE" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_2" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ROLE;
CREATE CACHED TABLE "PUBLIC"."ROLES_PRIVILEGES"(
    "ROLE_ID" BINARY NOT NULL,
    "PRIVILEGE_ID" BINARY NOT NULL
);
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ROLES_PRIVILEGES;
CREATE CACHED TABLE "PUBLIC"."TERRITORY"(
    "ID" BINARY NOT NULL,
    "NAME" VARCHAR(255),
    "NUMBER" VARCHAR(255),
    "URL_FOR_GOOGLE_MAP" VARCHAR(255),
    "URL_FOR_JPEG_MAP" VARCHAR(255)
);
ALTER TABLE "PUBLIC"."TERRITORY" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_27" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.TERRITORY;
CREATE CACHED TABLE "PUBLIC"."TERRITORY_ENTRY"(
    "ID" BINARY NOT NULL,
    "ARCHIVED" BOOLEAN,
    "CONGREGATION_POOL" BOOLEAN,
    "MINISTERID" BINARY,
    "MINISTER_NAME" VARCHAR(255),
    "REGISTERED" TIMESTAMP,
    "TERRITORYID" BINARY,
    "TERRITORY_NAME" VARCHAR(255),
    "TERRITORY_NUMBER" VARCHAR(255)
);
ALTER TABLE "PUBLIC"."TERRITORY_ENTRY" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_E" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.TERRITORY_ENTRY;
CREATE CACHED TABLE "PUBLIC"."USER"(
    "ID" BINARY NOT NULL,
    "EMAIL" VARCHAR(255),
    "PASSWORD" VARCHAR(255)
);
ALTER TABLE "PUBLIC"."USER" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_27E" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.USER;
CREATE CACHED TABLE "PUBLIC"."USERS_ROLES"(
    "USER_ID" BINARY NOT NULL,
    "ROLE_ID" BINARY NOT NULL
);
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.USERS_ROLES;
CREATE CACHED TABLE "PUBLIC"."VERIFICATION_TOKEN"(
    "ID" BINARY NOT NULL,
    "EXPIRY_DATE" TIMESTAMP,
    "TOKEN" VARCHAR(255),
    "USER_ID" BINARY NOT NULL
);
ALTER TABLE "PUBLIC"."VERIFICATION_TOKEN" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_8" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.VERIFICATION_TOKEN;
ALTER TABLE "PUBLIC"."TERRITORY" ADD CONSTRAINT "PUBLIC"."UK_4KWBVUVEJHLXG2BRW6BEFWIHH" UNIQUE("NUMBER");
ALTER TABLE "PUBLIC"."USER" ADD CONSTRAINT "PUBLIC"."UK_OB8KQYQQGMEFL0ACO34AKDTPE" UNIQUE("EMAIL");
ALTER TABLE "PUBLIC"."MINISTER" ADD CONSTRAINT "PUBLIC"."UK_EVDNHK2WXQ3BCICVY693RYWOF" UNIQUE("NAME");
ALTER TABLE "PUBLIC"."USERS_ROLES" ADD CONSTRAINT "PUBLIC"."FKGD3IENDAOYH04B95YKQISE6QH" FOREIGN KEY("USER_ID") REFERENCES "PUBLIC"."USER"("ID") NOCHECK;
ALTER TABLE "PUBLIC"."ROLES_PRIVILEGES" ADD CONSTRAINT "PUBLIC"."FK9H2VEWSQH8LUHFQ71XOKH4WHO" FOREIGN KEY("ROLE_ID") REFERENCES "PUBLIC"."ROLE"("ID") NOCHECK;
ALTER TABLE "PUBLIC"."ROLES_PRIVILEGES" ADD CONSTRAINT "PUBLIC"."FK5YJWXW2GVFYU76J3RGQWO685U" FOREIGN KEY("PRIVILEGE_ID") REFERENCES "PUBLIC"."PRIVILEGE"("ID") NOCHECK;
ALTER TABLE "PUBLIC"."PASSWORD_RESET_TOKEN" ADD CONSTRAINT "PUBLIC"."FK5LWTBNCUG84D4ERO33V3CFXVL" FOREIGN KEY("USER_ID") REFERENCES "PUBLIC"."USER"("ID") NOCHECK;
ALTER TABLE "PUBLIC"."USERS_ROLES" ADD CONSTRAINT "PUBLIC"."FKT4V0RRWEYK393BDGT107VDX0X" FOREIGN KEY("ROLE_ID") REFERENCES "PUBLIC"."ROLE"("ID") NOCHECK;
ALTER TABLE "PUBLIC"."VERIFICATION_TOKEN" ADD CONSTRAINT "PUBLIC"."FK_VERIFY_USER" FOREIGN KEY("USER_ID") REFERENCES "PUBLIC"."USER"("ID") NOCHECK;
